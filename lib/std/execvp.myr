use "alloc.use"
use "env.use"
use "errno.use"
use "fmt.use"
use "option.use"
use "strfind.use"
use "strsplit.use"
use "syswrap.use"

pkg std = 
	const execvp	: (cmd : byte[:], args : byte[:][:] -> errno)
	const execvpe	: (cmd : byte[:], args : byte[:][:], env : byte[:][:] -> errno)
;;

const execvp = {cmd, args
	var paths, binpath
	var buf : byte[512]

	match strfind(cmd, "/")
	| `Some _:
		-> execv(cmd, args)
	| `None:
		paths = getpaths()
		for p in paths
			binpath = bfmt(buf[:], "{}/{}", p, cmd)
			execv(binpath, args)
		;;
		slfree(paths)
	;;
	-> -1
}

const execvpe = {cmd, args, env
	var paths, binpath
	var buf : byte[512]

	match strfind(cmd, "/")
	| `Some _:
		-> execve(cmd, args, env)
	| `None:
		paths = getpaths()
		for p in paths
			binpath = bfmt(buf[:], "{}/{}", p, cmd)
			execve(binpath, args, env)
		;;
		slfree(paths)
	;;
	-> -1
}

const getpaths = {
	var path
	match getenv("PATH")
	| `Some p:	path = p
	| `None:	path = "/usr/local/bin:/bin:/usr/bin"
	;;
	-> strsplit(path, ":")
}
